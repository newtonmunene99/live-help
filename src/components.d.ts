/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface LiveHelp {
      'last': String;
      'organization': any;
    }
  }

  interface HTMLLiveHelpElement extends StencilComponents.LiveHelp, HTMLStencilElement {}

  var HTMLLiveHelpElement: {
    prototype: HTMLLiveHelpElement;
    new (): HTMLLiveHelpElement;
  };
  interface HTMLElementTagNameMap {
    'live-help': HTMLLiveHelpElement;
  }
  interface ElementTagNameMap {
    'live-help': HTMLLiveHelpElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'live-help': JSXElements.LiveHelpAttributes;
    }
  }
  namespace JSXElements {
    export interface LiveHelpAttributes extends HTMLAttributes {
      'last'?: String;
      'organization'?: any;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;